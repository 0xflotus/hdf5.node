0 info it worked if it ends with ok
1 verbose cli [ '/home/roger/NodeProjects/V8/node/dist/bin/node',
1 verbose cli   '/home/roger/NodeProjects/V8/node/dist/bin/npm',
1 verbose cli   'publish',
1 verbose cli   '--nodedir=/home/roger/NodeProjects/V8/node' ]
2 info using npm@1.4.28
3 info using node@v0.13.0-pre
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/roger/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/roger/.npm/hdf5/0.0.2/package.tgz', '.' ]
11 verbose tarball /home/roger/.npm/hdf5/0.0.2/package.tgz
12 verbose folder .
13 info prepublish hdf5@0.0.2
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/roger/.npm/1f1177db-tar.lock
16 silly lockFile 367a0e4b-roger-npm-hdf5-0-0-2-package-tgz tar:///home/roger/.npm/hdf5/0.0.2/package.tgz
17 verbose lock tar:///home/roger/.npm/hdf5/0.0.2/package.tgz /home/roger/.npm/367a0e4b-roger-npm-hdf5-0-0-2-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 367a0e4b-roger-npm-hdf5-0-0-2-package-tgz tar:///home/roger/.npm/hdf5/0.0.2/package.tgz
21 silly lockFile 367a0e4b-roger-npm-hdf5-0-0-2-package-tgz tar:///home/roger/.npm/hdf5/0.0.2/package.tgz
22 silly lockFile 5ac0ad02-ome-roger-npm-hdf5-0-0-2-package /home/roger/.npm/hdf5/0.0.2/package
23 verbose lock /home/roger/.npm/hdf5/0.0.2/package /home/roger/.npm/5ac0ad02-ome-roger-npm-hdf5-0-0-2-package.lock
24 silly lockFile 5ac0ad02-ome-roger-npm-hdf5-0-0-2-package /home/roger/.npm/hdf5/0.0.2/package
25 silly lockFile 5ac0ad02-ome-roger-npm-hdf5-0-0-2-package /home/roger/.npm/hdf5/0.0.2/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'hdf5',
28 silly publish   version: '0.0.2',
28 silly publish   description: 'Native Abstractions for hdf5 file io',
28 silly publish   main: './index.js',
28 silly publish   repository:
28 silly publish    { type: 'git',
28 silly publish      url: 'https://github.com/ryancole/hdf5.node.git' },
28 silly publish   dependencies: { should: '*' },
28 silly publish   devDependencies:
28 silly publish    { xml2js: '0.4.4',
28 silly publish      koa: '0.13.0',
28 silly publish      'koa-compress': '1.0.8',
28 silly publish      'koa-route': '2.2.0',
28 silly publish      'koa-static': '1.4.7',
28 silly publish      'koa-views': '2.1.0',
28 silly publish      unirest: '0.3.0',
28 silly publish      ethercalc: '0.20141121.0',
28 silly publish      grunt: '0.4.4',
28 silly publish      'grunt-contrib-jshint': '0.10.0',
28 silly publish      'grunt-contrib-nodeunit': '0.3.3',
28 silly publish      'grunt-contrib-uglify': '0.4.0',
28 silly publish      'grunt-mocha-cli': '1.8.0',
28 silly publish      'grunt-docco': '0.3.3',
28 silly publish      should: '4.3.0',
28 silly publish      'mocha-co': '1.17.1-co.1' },
28 silly publish   contributors:
28 silly publish    [ { name: 'Ryan Cole',
28 silly publish        email: 'ryan@rycole.com',
28 silly publish        url: 'https://github.com/ryancole/' },
28 silly publish      { name: 'Roger I Martin',
28 silly publish        email: 'mathmldashx@yahoo.com',
28 silly publish        url: 'https://github.com/rimmartin/' } ],
28 silly publish   license: { type: 'mit' },
28 silly publish   keywords: [],
28 silly publish   scripts: { install: 'node-gyp rebuild' },
28 silly publish   gypfile: true,
28 silly publish   readme: 'A node module for reading/writing the HDF5 file format. Unlike other languages that wrap hdf5 API\'s this interface takes advantage of the compatibility of V8 and HDF5. The result \r\nis a direct map to javascript behavior with the least amount of data copying and coding tasks for the user. Hopefully you won\'t need to write yet another layer in your code to accomplish your goals.\r\n\r\n```javascript\r\nvar hdf5 = require(\'hdf5\').hdf5;\r\n\r\n//This will be refactored to match the native h5 for combining\r\nvar Access = require(\'lib/globals\').Access;\r\n\r\nvar file = new hdf5.File(\'/tmp/foo.h5\', Access.ACC_RDONLY);\r\n    \r\nvar group=file.openGroup(\'pmc\');\r\n```\r\n\r\nTo create a new h5 and put data into it,\r\n\r\n```javascript\r\nvar hdf5 = require(\'hdf5\').hdf5;\r\nvar h5lt = require(\'hdf5\').h5lt;\r\n\r\n//This will be refactored to match the native h5 for combining\r\nvar Access = require(\'lib/globals\').Access;\r\n\r\nvar file = new hdf5.File(\'/tmp/foo.h5\', Access.ACC_TRUNC);\r\n    \r\nvar group=file.createGroup();\r\ngroup.create(\'pmc\', file);\r\nvar buffer=new Float64Array(5);\r\nbuffer[0]=1.0;\r\nbuffer[1]=2.0;\r\nbuffer[2]=3.0;\r\nbuffer[3]=4.0;\r\nbuffer[4]=5.0;\r\nh5lt.makeDataset(group.id, \'Refractive Index\', buffer);\r\nvar readBuffer=h5lt.readDataset(group.id, \'Refractive Index\');\r\n\r\n//A rank two dataset with 3 columns of doubles\r\nvar frequency=new Float64Array(3*numberOfDataLines);\r\nvar groupFrequencies=file.openGroup(\'pmcservices/sodium-icosanoate/Frequency Data/Frequencies\');\r\ngroupFrequencies.open(\'pmcservices/sodium-icosanoate/Frequency Data/Frequencies\', file);\r\nfrequency.rank=2;\r\nfrequency.rows=numberOfDataLines;\r\nfrequency.columns=3;\r\nh5lt.makeDataset(groupFrequencies.id, title, frequency);\r\n```\r\n\r\nThe dataset members of a group can be retrieved in order of creation. Something I\'ve needed more often than not.\r\n\r\n```javascript\r\nvar groupFrequencies=file.openGroup(\'pmcservices/sodium-icosanoate/Frequency Data/Frequencies\');\r\nvar frequencyNames=groupFrequencies.getMemberNamesByCreationOrder();\r\nfor (var frequencyIndex = 0; frequencyIndex < frequencyNames.length; frequencyIndex++)\r\n{\r\n    xmolDocument+=elements.length+\'\\n\';\r\n    xmolDocument+=frequencyNames[frequencyIndex]+\'\\n\';\r\n    var frequency=h5lt.readDataset(groupFrequencies.id, frequencyNames[frequencyIndex]);\r\n    for (var index = 0; index < elements.length; index++)\r\n    {\r\n        xmolDocument+=elements[index]+\' \'+lastTrajectory[3*index]+\' \'+lastTrajectory[3*index+1]+\' \'+lastTrajectory[3*index+2]+\' \'+frequency[3*index]+\' \'+frequency[3*index+1]+\' \'+frequency[3*index+2]+\'\\n\';\r\n    }\r\n}\r\n```\r\n\r\nAttributes can be attached to Groups by flush after the properties are added to javascript group instance.  Prototype properties also get flushed.\r\nBecause javascript has the ability to have property names with spaces via [ \'\' ] these readily map to h5\'s similar nature.\r\n\r\n```javascript\r\nvar groupTargets=file.createGroup();\r\ngroupTargets.create(\'pmcservices/sodium-icosanoate\', file);\r\ngroupTargets[ \'Computed Heat of Formation\' ]=-221.78436098572274;\r\ngroupTargets[ \'Computed Ionization Potential\' ]=9.57689311885752;\r\ngroupTargets[ \'Computed Total Energy\' ]=-3573.674399276322;\r\ngroupTargets.Status=256;\r\ngroupTargets.Information="\\"There are no solutions; there are only trade-offs.\\" -- Thomas Sowell";\r\ngroupTargets.flush();\r\n```\r\n\r\nTypes are allowed to change to match the javascript side. If an attribute is already there it will get updated by h5\'s existence check, remove and then added back. \r\nWhen opening an h5 the group\'s attributes can be refreshed to the javascript in a reverse manner\r\n\r\n```javascript\r\nvar groupTarget=file.openGroup(\'pmcservices/sodium-icosanoate\');\r\ngroupTarget.refresh();\r\nconsole.dir(groupTarget.[ \'Computed Heat Of Formation\' ]);\r\nconsole.dir(groupTarget.Information);\r\n```\r\n\r\nCurrently testing with node v0.13.0-pre and V8 3.26.33\r\n\r\nA legacy development for node v0.10.31 and V8 3.14.5.9 resides in ./legacy/node-v0.10.31. This probably will work for a number of v0.10.x\'s.\r\nGo into the ./legacy/node-v0.10.31 folder and with npm, node-gyp and node pointing to compatible version, compile the same as below. Then go back two folders and test using the same javascript code.  Make sure your NODE_PATH has your obj.target.\r\nFor example:\r\n\r\n```bash\r\nexport NODE_PATH=/home/roger/NodeProjects/hdf5.node/build/Release/obj.target:$NODE_PATH\r\n```\r\n\r\n## Dependencies\r\n\r\n+ [HDF5 C++ Library](http://www.hdfgroup.org/downloads/index.html) v5-1.8.13\r\n        (Prior v5-1.8.x\'s untested yet should work)\r\n\r\nWhen compiling the HDF5 C++ library, be sure to use the `--enable-cxx` flag. The `binding.gyp` expects the HDF5_HOME environment variable set to your install.\r\n\r\n\r\n## Compiling\r\nThe code requires a gcc compiler supporting C++11.  The binding.gyp defines the cflags with -std=c++11.  There isn\'t any cxxflags that I know of but cflags in node-gyp does \r\neffect g++.\r\n```bash\r\nexport HDF5_HOME=/home/roger/NodeProjects/hdf5\r\nnode-gyp configure build\r\n```\r\nTo build a legacy version in folder legacy your script would be a modification of \r\n\r\n```bash\r\ncd ./legacy/node-v0.10.31\r\n\r\nexport V8_HOME=/home/roger/Software/node-v0.10.31/deps/v8\r\nexport HDF5_HOME=/home/roger/NodeProjects/hdf5\r\nexport NODE_PATH=`pwd`/build/Release/obj.target:`pwd`/build/Release/lib.target:$NODE_PATH\r\n\r\nexport PATH=/home/roger/Software/gcc/dist/bin:$PATH\r\nexport LD_LIBRARY_PATH=/home/roger/Software/gcc/dist/lib64:$HDF5_HOME/lib:`pwd`build/Release/obj.target:$LD_LIBRARY_PATH\r\n\r\nexport FC=gfortran\r\nexport CC=gcc\r\nexport CXX=g++\r\n\r\n# comment out clean line for first build although it won\'t hurt if you choose not \r\n/usr/local/bin/node-gyp clean\r\n/usr/local/bin/node-gyp configure --nodedir=/home/roger/Software/node-v0.10.31\r\n/usr/local/bin/node-gyp build\r\n\r\n```\r\n## Environment Variables\r\n\r\nThe path to the HDF5 shared objects must be added to the runtime library search path. \r\n\r\n```bash\r\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./hdf5.node/../hdf5/lib\r\n```\r\n\r\n## Running Test\r\n\r\nThe tests are based on mocha\r\n\r\n```bash\r\nmocha\r\n```\r\nor\r\n\r\n```bash\r\nmocha --require should\r\n```\r\nFor legacy, run with the same tests from project home directory but have environment specify the location of the legacy *.node \r\n\r\n```bash\r\nexport V8_HOME=/home/roger/Software/node-v0.10.31/deps/v8\r\nexport HDF5_HOME=/home/roger/NodeProjects/hdf5\r\nexport NODE_PATH=`pwd`/legacy/node-v0.10.31/build/Release/obj.target:$NODE_PATH\r\n\r\nexport PATH=/home/roger/Software/gcc/dist/bin:$PATH\r\nexport LD_LIBRARY_PATH=/home/roger/Software/gcc/dist/lib64:$HDF5_HOME/lib:$LD_LIBRARY_PATH\r\n\r\nexport PATH=/home/roger/Software/node-v0.10.31-linux-x64/dist/bin:`pwd`/legacy/node-v0.10.31/node_modules/mocha/bin:$PATH\r\n\r\nmocha --require should \r\n\r\n#To prove build tools\r\nnode --version\r\nnode -e "console.log(process.versions.v8)"\r\n\r\n```\r\n\r\n## Experimental\r\n\r\nWhile still very experimental, the compatibility of node/v8 is now being explored for the [High-level HDF5 Interfaces](http://www.hdfgroup.org/HDF5/doc/HL/).  Since the javascript objects have\r\ndimensions and type available the argument list is short to the native side. For example:\r\n\r\n```javascript\r\nh5lt.makeDataset();\r\n```\r\n\r\ntakes three arguments; the id of the group or file, the dataset name and the javascript array object with the data. Reading\r\na dataset only needs the id of the group or file and the dataset name.  It returns a javascript array compatible with the h5 dataset properties.\r\n\r\nCurrently rank 1 and 2 datasets are made or read but higher rank is being investigated.  First, all the builtin types will be supported and eventually custom data types\r\nwill be attempted.  Particularly I have a need for complex numbers yet I\'m on a learning curve in javascript.\r\n\r\nThe H5IM is now mostly implemented.  The palette portion remains to be implemented. \r\nAttributes are refreshed from and flushed to Groups with the properties on javascript objects. More attributes will soon be possible on the file object itself and on datasets.\r\n\r\nThe HDF5 C++ Library is being used for the file and group objects and metadata since some persistence on the native side is needed.  Although the c interface\r\nis appealing for enabling creation tracking and ordering of members of a group. Currently this property list is default for groups.\r\n\r\nAny ideas for the design of the API and interface are welcome.\r\n',
28 silly publish   readmeFilename: 'readme.md',
28 silly publish   gitHead: '7745983e6b768cd006b5d78af8205a63c559d690',
28 silly publish   homepage: 'https://github.com/ryancole/hdf5.node',
28 silly publish   _id: 'hdf5@0.0.2',
28 silly publish   _shasum: '7cd5d470da489956e92544db63a5296cd0bc27cd',
28 silly publish   _from: '.' }
29 verbose request where is /hdf5
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 527e60c37047c9f7
32 verbose url raw /hdf5
33 verbose url resolving [ 'https://registry.npmjs.org/', './hdf5' ]
34 verbose url resolved https://registry.npmjs.org/hdf5
35 verbose request where is https://registry.npmjs.org/hdf5
36 info trying registry request attempt 1 at 11:54:47 AM
37 http PUT https://registry.npmjs.org/hdf5
38 http 403 https://registry.npmjs.org/hdf5
39 verbose headers { date: 'Wed, 03 Dec 2014 16:54:48 GMT',
39 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
39 verbose headers   'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '13722',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   'x-served-by': 'cache-jfk1024-JFK',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1417625687.920169,VS0,VE1043',
39 verbose headers   connection: 'close' }
40 error publish Failed PUT 403
41 error Error: forbidden cannot modify pre-existing version: 0.0.2
41 error old={"name":"hdf5","version":"0.0.2","description":"Native Abstractions for hdf5 file io","main":"./","repository":{"type":"git","url":"https://github.com/ryancole/hdf5.node.git"},"dependencies":{"should":"*"},"devDependencies":{"xml2js":"0.4.2","grunt":"0.4.4","grunt-contrib-jshint":"0.10.0","grunt-contrib-nodeunit":"0.3.3","grunt-contrib-uglify":"0.4.0","grunt-mocha-cli":"1.8.0","grunt-docco":"0.3.3","should":"3.3.0","mocha":"1.18.2"},"contributors":[{"name":"Ryan Cole","email":"ryan@rycole.com","url":"https://github.com/ryancole/"},{"name":"Roger I Martin","email":"mathmldashx@yahoo.com","url":"https://github.com/rimmartin/"}],"license":{"type":"mit"},"keywords":[],"scripts":{"install":"node-gyp rebuild"},"gypfile":true,"gitHead":"f02211476318b011bc1df233450ec4f83fa914ba","homepage":"https://github.com/ryancole/hdf5.node","_id":"hdf5@0.0.2","_shasum":"6c806e46568735f293e5c90ecc39c15fea7953fa","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"rimmartin","email":"mathmldashx@yahoo.com"},"maintainers":[{"name":"rimmartin","email":"mathmldashx@yahoo.com"}],"dist":{"shasum":"6c806e46568735f293e5c90ecc39c15fea7953fa","tarball":"http://registry.npmjs.org/hdf5/-/hdf5-0.0.2.tgz"}}
41 error new={"name":"hdf5","version":"0.0.2","description":"Native Abstractions for hdf5 file io","main":"./index.js","repository":{"type":"git","url":"https://github.com/ryancole/hdf5.node.git"},"dependencies":{"should":"*"},"devDependencies":{"xml2js":"0.4.4","koa":"0.13.0","koa-compress":"1.0.8","koa-route":"2.2.0","koa-static":"1.4.7","koa-views":"2.1.0","unirest":"0.3.0","ethercalc":"0.20141121.0","grunt":"0.4.4","grunt-contrib-jshint":"0.10.0","grunt-contrib-nodeunit":"0.3.3","grunt-contrib-uglify":"0.4.0","grunt-mocha-cli":"1.8.0","grunt-docco":"0.3.3","should":"4.3.0","mocha-co":"1.17.1-co.1"},"contributors":[{"name":"Ryan Cole","email":"ryan@rycole.com","url":"https://github.com/ryancole/"},{"name":"Roger I Martin","email":"mathmldashx@yahoo.com","url":"https://github.com/rimmartin/"}],"license":{"type":"mit"},"keywords":[],"scripts":{"install":"node-gyp rebuild"},"gypfile":true,"readme":"A node module for reading/writing the HDF5 file format. Unlike other languages that wrap hdf5 API's this interface takes advantage of the compatibility of V8 and HDF5. The result \u000d\u000ais a direct map to javascript behavior with the least amount of data copying and coding tasks for the user. Hopefully you won't need to write yet another layer in your code to accomplish your goals.\u000d\u000a\u000d\u000a```javascript\u000d\u000avar hdf5 = require('hdf5').hdf5;\u000d\u000a\u000d\u000a//This will be refactored to match the native h5 for combining\u000d\u000avar Access = require('lib/globals').Access;\u000d\u000a\u000d\u000avar file = new hdf5.File('/tmp/foo.h5', Access.ACC_RDONLY);\u000d\u000a    \u000d\u000avar group=file.openGroup('pmc');\u000d\u000a```\u000d\u000a\u000d\u000aTo create a new h5 and put data into it,\u000d\u000a\u000d\u000a```javascript\u000d\u000avar hdf5 = require('hdf5').hdf5;\u000d\u000avar h5lt = require('hdf5').h5lt;\u000d\u000a\u000d\u000a//This will be refactored to match the native h5 for combining\u000d\u000avar Access = require('lib/globals').Access;\u000d\u000a\u000d\u000avar file = new hdf5.File('/tmp/foo.h5', Access.ACC_TRUNC);\u000d\u000a    \u000d\u000avar group=file.createGroup();\u000d\u000agroup.create('pmc', file);\u000d\u000avar buffer=new Float64Array(5);\u000d\u000abuffer[0]=1.0;\u000d\u000abuffer[1]=2.0;\u000d\u000abuffer[2]=3.0;\u000d\u000abuffer[3]=4.0;\u000d\u000abuffer[4]=5.0;\u000d\u000ah5lt.makeDataset(group.id, 'Refractive Index', buffer);\u000d\u000avar readBuffer=h5lt.readDataset(group.id, 'Refractive Index');\u000d\u000a\u000d\u000a//A rank two dataset with 3 columns of doubles\u000d\u000avar frequency=new Float64Array(3*numberOfDataLines);\u000d\u000avar groupFrequencies=file.openGroup('pmcservices/sodium-icosanoate/Frequency Data/Frequencies');\u000d\u000agroupFrequencies.open('pmcservices/sodium-icosanoate/Frequency Data/Frequencies', file);\u000d\u000afrequency.rank=2;\u000d\u000afrequency.rows=numberOfDataLines;\u000d\u000afrequency.columns=3;\u000d\u000ah5lt.makeDataset(groupFrequencies.id, title, frequency);\u000d\u000a```\u000d\u000a\u000d\u000aThe dataset members of a group can be retrieved in order of creation. Something I've needed more often than not.\u000d\u000a\u000d\u000a```javascript\u000d\u000avar groupFrequencies=file.openGroup('pmcservices/sodium-icosanoate/Frequency Data/Frequencies');\u000d\u000avar frequencyNames=groupFrequencies.getMemberNamesByCreationOrder();\u000d\u000afor (var frequencyIndex = 0; frequencyIndex < frequencyNames.length; frequencyIndex++)\u000d\u000a{\u000d\u000a    xmolDocument+=elements.length+'\\n';\u000d\u000a    xmolDocument+=frequencyNames[frequencyIndex]+'\\n';\u000d\u000a    var frequency=h5lt.readDataset(groupFrequencies.id, frequencyNames[frequencyIndex]);\u000d\u000a    for (var index = 0; index < elements.length; index++)\u000d\u000a    {\u000d\u000a        xmolDocument+=elements[index]+' '+lastTrajectory[3*index]+' '+lastTrajectory[3*index+1]+' '+lastTrajectory[3*index+2]+' '+frequency[3*index]+' '+frequency[3*index+1]+' '+frequency[3*index+2]+'\\n';\u000d\u000a    }\u000d\u000a}\u000d\u000a```\u000d\u000a\u000d\u000aAttributes can be attached to Groups by flush after the properties are added to javascript group instance.  Prototype properties also get flushed.\u000d\u000aBecause javascript has the ability to have property names with spaces via [ '' ] these readily map to h5's similar nature.\u000d\u000a\u000d\u000a```javascript\u000d\u000avar groupTargets=file.createGroup();\u000d\u000agroupTargets.create('pmcservices/sodium-icosanoate', file);\u000d\u000agroupTargets[ 'Computed Heat of Formation' ]=-221.78436098572274;\u000d\u000agroupTargets[ 'Computed Ionization Potential' ]=9.57689311885752;\u000d\u000agroupTargets[ 'Computed Total Energy' ]=-3573.674399276322;\u000d\u000agroupTargets.Status=256;\u000d\u000agroupTargets.Information=\"\\\"There are no solutions; there are only trade-offs.\\\" -- Thomas Sowell\";\u000d\u000agroupTargets.flush();\u000d\u000a```\u000d\u000a\u000d\u000aTypes are allowed to change to match the javascript side. If an attribute is already there it will get updated by h5's existence check, remove and then added back. \u000d\u000aWhen opening an h5 the group's attributes can be refreshed to the javascript in a reverse manner\u000d\u000a\u000d\u000a```javascript\u000d\u000avar groupTarget=file.openGroup('pmcservices/sodium-icosanoate');\u000d\u000agroupTarget.refresh();\u000d\u000aconsole.dir(groupTarget.[ 'Computed Heat Of Formation' ]);\u000d\u000aconsole.dir(groupTarget.Information);\u000d\u000a```\u000d\u000a\u000d\u000aCurrently testing with node v0.13.0-pre and V8 3.26.33\u000d\u000a\u000d\u000aA legacy development for node v0.10.31 and V8 3.14.5.9 resides in ./legacy/node-v0.10.31. This probably will work for a number of v0.10.x's.\u000d\u000aGo into the ./legacy/node-v0.10.31 folder and with npm, node-gyp and node pointing to compatible version, compile the same as below. Then go back two folders and test using the same javascript code.  Make sure your NODE_PATH has your obj.target.\u000d\u000aFor example:\u000d\u000a\u000d\u000a```bash\u000d\u000aexport NODE_PATH=/home/roger/NodeProjects/hdf5.node/build/Release/obj.target:$NODE_PATH\u000d\u000a```\u000d\u000a\u000d\u000a## Dependencies\u000d\u000a\u000d\u000a+ [HDF5 C++ Library](http://www.hdfgroup.org/downloads/index.html) v5-1.8.13\u000d\u000a        (Prior v5-1.8.x's untested yet should work)\u000d\u000a\u000d\u000aWhen compiling the HDF5 C++ library, be sure to use the `--enable-cxx` flag. The `binding.gyp` expects the HDF5_HOME environment variable set to your install.\u000d\u000a\u000d\u000a\u000d\u000a## Compiling\u000d\u000aThe code requires a gcc compiler supporting C++11.  The binding.gyp defines the cflags with -std=c++11.  There isn't any cxxflags that I know of but cflags in node-gyp does \u000d\u000aeffect g++.\u000d\u000a```bash\u000d\u000aexport HDF5_HOME=/home/roger/NodeProjects/hdf5\u000d\u000anode-gyp configure build\u000d\u000a```\u000d\u000aTo build a legacy version in folder legacy your script would be a modification of \u000d\u000a\u000d\u000a```bash\u000d\u000acd ./legacy/node-v0.10.31\u000d\u000a\u000d\u000aexport V8_HOME=/home/roger/Software/node-v0.10.31/deps/v8\u000d\u000aexport HDF5_HOME=/home/roger/NodeProjects/hdf5\u000d\u000aexport NODE_PATH=`pwd`/build/Release/obj.target:`pwd`/build/Release/lib.target:$NODE_PATH\u000d\u000a\u000d\u000aexport PATH=/home/roger/Software/gcc/dist/bin:$PATH\u000d\u000aexport LD_LIBRARY_PATH=/home/roger/Software/gcc/dist/lib64:$HDF5_HOME/lib:`pwd`build/Release/obj.target:$LD_LIBRARY_PATH\u000d\u000a\u000d\u000aexport FC=gfortran\u000d\u000aexport CC=gcc\u000d\u000aexport CXX=g++\u000d\u000a\u000d\u000a# comment out clean line for first build although it won't hurt if you choose not \u000d\u000a/usr/local/bin/node-gyp clean\u000d\u000a/usr/local/bin/node-gyp configure --nodedir=/home/roger/Software/node-v0.10.31\u000d\u000a/usr/local/bin/node-gyp build\u000d\u000a\u000d\u000a```\u000d\u000a## Environment Variables\u000d\u000a\u000d\u000aThe path to the HDF5 shared objects must be added to the runtime library search path. \u000d\u000a\u000d\u000a```bash\u000d\u000aexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./hdf5.node/../hdf5/lib\u000d\u000a```\u000d\u000a\u000d\u000a## Running Test\u000d\u000a\u000d\u000aThe tests are based on mocha\u000d\u000a\u000d\u000a```bash\u000d\u000amocha\u000d\u000a```\u000d\u000aor\u000d\u000a\u000d\u000a```bash\u000d\u000amocha --require should\u000d\u000a```\u000d\u000aFor legacy, run with the same tests from project home directory but have environment specify the location of the legacy *.node \u000d\u000a\u000d\u000a```bash\u000d\u000aexport V8_HOME=/home/roger/Software/node-v0.10.31/deps/v8\u000d\u000aexport HDF5_HOME=/home/roger/NodeProjects/hdf5\u000d\u000aexport NODE_PATH=`pwd`/legacy/node-v0.10.31/build/Release/obj.target:$NODE_PATH\u000d\u000a\u000d\u000aexport PATH=/home/roger/Software/gcc/dist/bin:$PATH\u000d\u000aexport LD_LIBRARY_PATH=/home/roger/Software/gcc/dist/lib64:$HDF5_HOME/lib:$LD_LIBRARY_PATH\u000d\u000a\u000d\u000aexport PATH=/home/roger/Software/node-v0.10.31-linux-x64/dist/bin:`pwd`/legacy/node-v0.10.31/node_modules/mocha/bin:$PATH\u000d\u000a\u000d\u000amocha --require should \u000d\u000a\u000d\u000a#To prove build tools\u000d\u000anode --version\u000d\u000anode -e \"console.log(process.versions.v8)\"\u000d\u000a\u000d\u000a```\u000d\u000a\u000d\u000a## Experimental\u000d\u000a\u000d\u000aWhile still very experimental, the compatibility of node/v8 is now being explored for the [High-level HDF5 Interfaces](http://www.hdfgroup.org/HDF5/doc/HL/).  Since the javascript objects have\u000d\u000adimensions and type available the argument list is short to the native side. For example:\u000d\u000a\u000d\u000a```javascript\u000d\u000ah5lt.makeDataset();\u000d\u000a```\u000d\u000a\u000d\u000atakes three arguments; the id of the group or file, the dataset name and the javascript array object with the data. Reading\u000d\u000aa dataset only needs the id of the group or file and the dataset name.  It returns a javascript array compatible with the h5 dataset properties.\u000d\u000a\u000d\u000aCurrently rank 1 and 2 datasets are made or read but higher rank is being investigated.  First, all the builtin types will be supported and eventually custom data types\u000d\u000awill be attempted.  Particularly I have a need for complex numbers yet I'm on a learning curve in javascript.\u000d\u000a\u000d\u000aThe H5IM is now mostly implemented.  The palette portion remains to be implemented. \u000d\u000aAttributes are refreshed from and flushed to Groups with the properties on javascript objects. More attributes will soon be possible on the file object itself and on datasets.\u000d\u000a\u000d\u000aThe HDF5 C++ Library is being used for the file and group objects and metadata since some persistence on the native side is needed.  Although the c interface\u000d\u000ais appealing for enabling creation tracking and ordering of members of a group. Currently this property list is default for groups.\u000d\u000a\u000d\u000aAny ideas for the design of the API and interface are welcome.\u000d\u000a","readmeFilename":"readme.md","gitHead":"7745983e6b768cd006b5d78af8205a63c559d690","homepage":"https://github.com/ryancole/hdf5.node","_id":"hdf5@0.0.2","_shasum":"7cd5d470da489956e92544db63a5296cd0bc27cd","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"rimmartin","email":"mathmldashx@yahoo.com"},"maintainers":[{"name":"rimmartin","email":"mathmldashx@yahoo.com"}],"dist":{"shasum":"7cd5d470da489956e92544db63a5296cd0bc27cd","tarball":"http://registry.npmjs.org/hdf5/-/hdf5-0.0.2.tgz"}}: hdf5
41 error     at RegClient.<anonymous> (/home/roger/NodeProjects/V8/node/dist/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/home/roger/NodeProjects/V8/node/dist/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/home/roger/NodeProjects/V8/node/dist/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:110:17)
41 error     at Request.<anonymous> (/home/roger/NodeProjects/V8/node/dist/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:129:20)
41 error     at IncomingMessage.<anonymous> (/home/roger/NodeProjects/V8/node/dist/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:129:20)
41 error     at _stream_readable.js:907:16
41 error     at process._tickCallback (node.js:343:11)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Linux 3.13.0-40-generic
44 error command "/home/roger/NodeProjects/V8/node/dist/bin/node" "/home/roger/NodeProjects/V8/node/dist/bin/npm" "publish" "--nodedir=/home/roger/NodeProjects/V8/node"
45 error cwd /home/roger/NodeProjects/hdf5.node
46 error node -v v0.13.0-pre
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
